name: BuildEstate CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'  # Enable npm caching
        cache-dependency-path: '**/package-lock.json'
    
    # Clean npm cache in case of corrupted cache
    - name: Clean npm cache
      run: npm cache clean --force
    
    # Install dependencies with a clean installation
    - name: Install root dependencies
      run: npm ci --prefer-offline || npm install
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci --prefer-offline || npm install
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        rm -rf node_modules
        npm ci --prefer-offline || npm install
        # Explicitly install react-helmet-async to ensure it's available
        npm install react-helmet-async --save
    
    - name: Install admin dependencies
      working-directory: ./admin
      run: npm ci --prefer-offline || npm install
    
    - name: Lint backend
      working-directory: ./backend
      run: npm run lint || echo "No lint script found"
    
    - name: Lint frontend
      working-directory: ./frontend
      run: npm run lint || echo "No lint script found"
    
    - name: Lint admin
      working-directory: ./admin
      run: npm run lint || echo "No lint script found"
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Build admin dashboard
      working-directory: ./admin
      run: npm run build